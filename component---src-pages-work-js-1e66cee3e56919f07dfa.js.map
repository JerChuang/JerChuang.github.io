{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/pages/work.js"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardTitle","ProjectCardStacks","ProjectCardStack","grey600","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","ProjectCard","title","description","thumbnail","stacks","uid","to","className","text","map","stack","i","key","project_stack","RichText","render","src","url","alt","WorkTitle","Work","projects","meta","titleTemplate","name","content","property","author","concat","project","node","project_title","project_stacks","project_preview_description","project_preview_thumbnail","_meta","data","prismic","allProjects","edges","site","siteMetadata","query"],"mappings":"qLAQMA,EAAuB,YAAOC,OAAP,qBAAH,8PAaHC,IAAWC,eAbR,oDAiBHD,IAAWE,eAjBR,oIA0BXC,IAAOC,QA1BI,qRAgDpBC,EAAqB,YAAO,MAAP,qBAAH,sJAYNF,IAAOC,QAZD,mJAsBDJ,IAAWC,eAtBV,oBA2BlBK,EAAmB,YAAO,KAAP,qBAAH,iEAIhBC,EAAoB,YAAO,MAAP,qBAAH,gHAOjBC,EAAmB,YAAO,KAAP,qBAAH,0CAGXL,IAAOM,QAHI,KAMhBC,EAAmB,YAAO,MAAP,qBAAH,4EAKCV,IAAWC,eALZ,6BAUhBU,EAAoB,YAAO,MAAP,qBAAH,iOAcjBC,EAA4B,YAAO,MAAP,qBAAH,cACfT,IAAOU,QADQ,oJAURb,IAAWC,eAVH,kMAyBbE,IAAOC,QAzBM,kKAoCNJ,IAAWC,eApCL,0BAgEhBa,IAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,IAA1C,OAClB,YAACrB,EAAD,CAAsBsB,GAAE,SAAWD,GACjC,YAACd,EAAD,CAAoBgB,UAAU,sBAC5B,YAACf,EAAD,KAAmBS,EAAM,GAAGO,MAC5B,YAACf,EAAD,KACGW,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,YAACjB,EAAD,CAAkBkB,IAAKD,GACpBD,EAAMG,cAAc,GAAGL,UAI9B,YAACZ,EAAD,KAAmBkB,WAASC,OAAOb,IACnC,YAACL,EAAD,CAAmBU,UAAU,qBAA7B,WACU,+BAGZ,YAACT,EAAD,CAA2BS,UAAU,6BACnC,mBAAKS,IAAKb,EAAUc,IAAKC,IAAKjB,EAAM,GAAGO,W,6KC/KvCW,EAAY,YAAO,KAAP,sBAAH,6CAITC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACX,8BACE,YAAC,IAAD,CACErB,MAAK,yCACLsB,cAAa,8CACbD,KAAM,CACJ,CACEE,KAAK,cACLC,QAASH,EAAKpB,aAEhB,CACEwB,SAAS,WACTD,QAAQ,0CAEV,CACEC,SAAS,iBACTD,QAASH,EAAKpB,aAEhB,CACEwB,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASH,EAAKK,QAEhB,CACEH,KAAK,gBACLC,QAASH,EAAKrB,OAEhB,CACEuB,KAAK,sBACLC,QAASH,EAAKpB,cAEhB0B,OAAON,KAEX,YAAC,IAAD,KACE,YAACH,EAAD,iBACA,8BACGE,EAASZ,KAAI,SAACoB,EAASlB,GAAV,OACZ,YAAC,IAAD,CACEC,IAAKD,EACLV,MAAO4B,EAAQC,KAAKC,cACpB3B,OAAQyB,EAAQC,KAAKE,eACrB9B,YAAa2B,EAAQC,KAAKG,4BAC1B9B,UAAW0B,EAAQC,KAAKI,0BACxB7B,IAAKwB,EAAQC,KAAKK,MAAM9B,aAQrB,sBAAe,IAAZ+B,EAAW,EAAXA,KACVf,EAAWe,EAAKC,QAAQC,YAAYC,MACpCjB,EAAOc,EAAKI,KAAKC,aACvB,OAAKpB,EAEE,YAACD,EAAD,CAAMC,SAAUA,EAAUC,KAAMA,IAFjB,MASjB,IAAMoB,EAAK","file":"component---src-pages-work-js-1e66cee3e56919f07dfa.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { RichText } from \"prismic-reactjs\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport colors from \"styles/colors\"\nimport PropTypes from \"prop-types\"\n\nconst ProjectCardContainer = styled(Link)`\n  display: grid;\n  grid-template-columns: 4fr 7fr;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  margin-bottom: 4em;\n  transition: all 150ms ease-in-out;\n  text-decoration: none;\n  color: currentColor;\n\n  @media (max-width: 950px) {\n    grid-template-columns: 4.5fr 7fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 2em;\n  }\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n\n    .ProjectCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n\n    .ProjectCardContent::before {\n      opacity: 0.02;\n      transition: all 150ms ease-in-out;\n    }\n\n    .ProjectCardImageContainer::before {\n      opacity: 0.2;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst ProjectCardContent = styled(\"div\")`\n  background: white;\n  padding: 4em 3em 2.25em 3em;\n  position: relative;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  @media (max-width: 950px) {\n    padding: 3.25em 2.5em 2em 2.5em;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-row: 2;\n  }\n`\n\nconst ProjectCardTitle = styled(\"h3\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n`\nconst ProjectCardStacks = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst ProjectCardStack = styled(\"h6\")`\n  margin-right: 1em;\n  font-weight: 600;\n  color: ${colors.grey600};\n`\n\nconst ProjectCardBlurb = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 5em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 2.5em;\n  }\n`\n\nconst ProjectCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`\n\nconst ProjectCardImageContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  position: relative;\n  padding-left: 2em;\n  padding-right: 2em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    padding-top: 3em;\n    max-height: 200px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  img {\n    max-width: 400px;\n    width: 100%;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n    @media (max-width: ${dimensions.maxwidthTablet}px) {\n      max-width: 300px;\n    }\n  }\n`\n\nconst ProjectCard = ({ title, description, thumbnail, stacks, uid }) => (\n  <ProjectCardContainer to={`/work/${uid}`}>\n    <ProjectCardContent className=\"ProjectCardContent\">\n      <ProjectCardTitle>{title[0].text}</ProjectCardTitle>\n      <ProjectCardStacks>\n        {stacks.map((stack, i) => (\n          <ProjectCardStack key={i}>\n            {stack.project_stack[0].text}\n          </ProjectCardStack>\n        ))}\n      </ProjectCardStacks>\n      <ProjectCardBlurb>{RichText.render(description)}</ProjectCardBlurb>\n      <ProjectCardAction className=\"ProjectCardAction\">\n        Details <span>&#8594;</span>\n      </ProjectCardAction>\n    </ProjectCardContent>\n    <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n      <img src={thumbnail.url} alt={title[0].text} />\n    </ProjectCardImageContainer>\n  </ProjectCardContainer>\n)\n\nexport default ProjectCard\n\nProjectCard.propTypes = {\n  thumbnail: PropTypes.object.isRequired,\n  stacks: PropTypes.array.isRequired,\n  title: PropTypes.array.isRequired,\n  description: PropTypes.array.isRequired,\n  uid: PropTypes.string.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\n\nconst WorkTitle = styled(\"h1\")`\n  margin-bottom: 1em;\n`\n\nconst Work = ({ projects, meta }) => (\n  <>\n    <Helmet\n      title={`Work | Prist, Gatsby & Prismic Starter`}\n      titleTemplate={`%s | Work | Prist, Gatsby & Prismic Starter`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: `Work | Prist, Gatsby & Prismic Starter`,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n      ].concat(meta)}\n    />\n    <Layout>\n      <WorkTitle>Projects</WorkTitle>\n      <>\n        {projects.map((project, i) => (\n          <ProjectCard\n            key={i}\n            title={project.node.project_title}\n            stacks={project.node.project_stacks}\n            description={project.node.project_preview_description}\n            thumbnail={project.node.project_preview_thumbnail}\n            uid={project.node._meta.uid}\n          />\n        ))}\n      </>\n    </Layout>\n  </>\n)\n\nexport default ({ data }) => {\n  const projects = data.prismic.allProjects.edges\n  const meta = data.site.siteMetadata\n  if (!projects) return null\n\n  return <Work projects={projects} meta={meta} />\n}\n\nWork.propTypes = {\n  projects: PropTypes.array.isRequired,\n}\n\nexport const query = graphql`\n  {\n    prismic {\n      allProjects {\n        edges {\n          node {\n            project_title\n            project_preview_description\n            project_preview_thumbnail\n            project_stacks {\n              project_stack\n            }\n            project_post_date\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardTitle","ProjectCardStacks","ProjectCardStack","grey600","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","ProjectCard","title","description","thumbnail","stacks","uid","to","className","text","map","stack","i","key","project_stack","RichText","render","src","url","alt","AboutContainer","AboutLinkContainer","AboutLink","AboutBio","About","bio","socialLinks","social","href","about_link","spans","data","target","rel","Hero","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","Section","WorkAction","RenderBody","home","projects","meta","titleTemplate","name","content","property","author","concat","hero_title","project","node","project_title","project_preview_description","project_stacks","project_preview_thumbnail","_meta","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout"],"mappings":"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","file":"component---src-pages-index-js-5e32f675c122917396c5.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { RichText } from \"prismic-reactjs\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport colors from \"styles/colors\"\nimport PropTypes from \"prop-types\"\n\nconst ProjectCardContainer = styled(Link)`\n  display: grid;\n  grid-template-columns: 4fr 7fr;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  margin-bottom: 4em;\n  transition: all 150ms ease-in-out;\n  text-decoration: none;\n  color: currentColor;\n\n  @media (max-width: 950px) {\n    grid-template-columns: 4.5fr 7fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 2em;\n  }\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n\n    .ProjectCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n\n    .ProjectCardContent::before {\n      opacity: 0.02;\n      transition: all 150ms ease-in-out;\n    }\n\n    .ProjectCardImageContainer::before {\n      opacity: 0.2;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst ProjectCardContent = styled(\"div\")`\n  background: white;\n  padding: 4em 3em 2.25em 3em;\n  position: relative;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  @media (max-width: 950px) {\n    padding: 3.25em 2.5em 2em 2.5em;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-row: 2;\n  }\n`\n\nconst ProjectCardTitle = styled(\"h3\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n`\nconst ProjectCardStacks = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst ProjectCardStack = styled(\"h6\")`\n  margin-right: 1em;\n  font-weight: 600;\n  color: ${colors.grey600};\n`\n\nconst ProjectCardBlurb = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 5em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 2.5em;\n  }\n`\n\nconst ProjectCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`\n\nconst ProjectCardImageContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  position: relative;\n  padding-left: 2em;\n  padding-right: 2em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    padding-top: 3em;\n    max-height: 200px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  img {\n    max-width: 400px;\n    width: 100%;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n    @media (max-width: ${dimensions.maxwidthTablet}px) {\n      max-width: 300px;\n    }\n  }\n`\n\nconst ProjectCard = ({ title, description, thumbnail, stacks, uid }) => (\n  <ProjectCardContainer to={`/work/${uid}`}>\n    <ProjectCardContent className=\"ProjectCardContent\">\n      <ProjectCardTitle>{title[0].text}</ProjectCardTitle>\n      <ProjectCardStacks>\n        {stacks.map((stack, i) => (\n          <ProjectCardStack key={i}>\n            {stack.project_stack[0].text}\n          </ProjectCardStack>\n        ))}\n      </ProjectCardStacks>\n      <ProjectCardBlurb>{RichText.render(description)}</ProjectCardBlurb>\n      <ProjectCardAction className=\"ProjectCardAction\">\n        Details <span>&#8594;</span>\n      </ProjectCardAction>\n    </ProjectCardContent>\n    <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n      <img src={thumbnail.url} alt={title[0].text} />\n    </ProjectCardImageContainer>\n  </ProjectCardContainer>\n)\n\nexport default ProjectCard\n\nProjectCard.propTypes = {\n  thumbnail: PropTypes.object.isRequired,\n  stacks: PropTypes.array.isRequired,\n  title: PropTypes.array.isRequired,\n  description: PropTypes.array.isRequired,\n  uid: PropTypes.string.isRequired,\n}\n","import React from \"react\"\n// import Button from \"components/_ui/Button\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport { RichText } from \"prismic-reactjs\"\nimport PropTypes from \"prop-types\"\n\nconst AboutContainer = styled(\"div\")`\n  padding-top: 1em;\n  display: grid;\n  grid-template-columns: 8em 1fr 8em;\n  grid-gap: 3em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr 3fr 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-template-columns: 7em 1fr;\n    grid-template-rows: 3em 1fr;\n    grid-gap: 2em;\n  }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n  padding-top: 1em;\n  padding-bottom: 3em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\nconst AboutLink = styled(\"a\")`\n  margin-bottom: 1.5em;\n  font-weight: 600;\n  line-height: 1.9;\n  text-decoration: none;\n  color: currentColor;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    opacity: 0;\n    transition: all 400ms ease-in-out;\n  }\n\n  &:hover {\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst AboutBio = styled(\"div\")`\n  padding-bottom: 3em;\n  max-width: 480px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\n// const AboutActions = styled(\"div\")`\n//   padding-top: 1em;\n//   padding-bottom: 3em;\n\n//   @media (max-width: ${dimensions.maxwidthMobile}px) {\n//     padding: 0;\n//     grid-column: 1 / -1;\n//     grid-row: 1;\n//   }\n// `\n\nconst About = ({ bio, socialLinks }) => (\n  <AboutContainer>\n    <AboutLinkContainer>\n      {socialLinks.map((social, i) => (\n        <AboutLink\n          key={i}\n          href={social.about_link[0].spans[0].data.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {social.about_link[0].text}\n          <span>&#8592;</span>\n        </AboutLink>\n      ))}\n    </AboutLinkContainer>\n    <AboutBio>{RichText.render(bio)}</AboutBio>\n    {/* <AboutActions>\n      <a\n        href=\"mailto:\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button className=\"Button--secondary\">Email me</Button>\n      </a>\n    </AboutActions> */}\n  </AboutContainer>\n)\n\nexport default About\n\nAbout.propTypes = {\n  bio: PropTypes.array.isRequired,\n  socialLinks: PropTypes.array.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { RichText } from \"prismic-reactjs\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport dimensions from \"styles/dimensions\"\n// import Button from \"components/_ui/Button\"\nimport About from \"components/About\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\n\nconst Hero = styled(\"div\")`\n  padding-top: 2.5em;\n  padding-bottom: 3em;\n  margin-bottom: 6em;\n  max-width: 830px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 3em;\n  }\n\n  h1 {\n    margin-bottom: 1em;\n\n    a {\n      text-decoration: none;\n      transition: all 100ms ease-in-out;\n\n      &:nth-of-type(1) {\n        color: ${colors.blue500};\n      }\n      &:nth-of-type(2) {\n        color: ${colors.orange500};\n      }\n      &:nth-of-type(3) {\n        color: ${colors.purple500};\n      }\n      &:nth-of-type(4) {\n        color: ${colors.green500};\n      }\n      &:nth-of-type(5) {\n        color: ${colors.teal500};\n      }\n\n      &:hover {\n        cursor: pointer;\n        transition: all 100ms ease-in-out;\n\n        &:nth-of-type(1) {\n          color: ${colors.blue600};\n          background-color: ${colors.blue200};\n        }\n        &:nth-of-type(2) {\n          color: ${colors.orange600};\n          background-color: ${colors.orange200};\n        }\n        &:nth-of-type(3) {\n          color: ${colors.purple600};\n          background-color: ${colors.purple200};\n        }\n        &:nth-of-type(4) {\n          color: ${colors.green600};\n          background-color: ${colors.green200};\n        }\n        &:nth-of-type(5) {\n          color: ${colors.teal600};\n          background-color: ${colors.teal200};\n        }\n      }\n    }\n  }\n`\n\nconst Section = styled(\"div\")`\n  margin-bottom: 10em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 4em;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nconst WorkAction = styled(Link)`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n  margin-left: auto;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin: 0 auto;\n  }\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n\n  &:hover {\n    color: ${colors.blue500};\n    transition: all 150ms ease-in-out;\n\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: transform 150ms ease-in-out;\n    }\n  }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n  <>\n    <Helmet\n      title={meta.title}\n      titleTemplate={`%s | ${meta.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: meta.title,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n      ].concat(meta)}\n    />\n    <Hero>\n      <>\n        {RichText.render(home.hero_title)}\n        {RichText.render(home.content)}\n      </>\n      {/* <a href={home.hero_button_link.url}\n               target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button>\n                    {RichText.render(home.hero_button_text)}\n                </Button>\n            </a> */}\n    </Hero>\n    <Section>\n      {projects.map((project, i) => (\n        <ProjectCard\n          key={i}\n          title={project.node.project_title}\n          description={project.node.project_preview_description}\n          stacks={project.node.project_stacks}\n          thumbnail={project.node.project_preview_thumbnail}\n          uid={project.node._meta.uid}\n        />\n      ))}\n      <WorkAction to={\"/work\"}>\n        See all projects <span>&#8594;</span>\n      </WorkAction>\n    </Section>\n    <Section>\n      {RichText.render(home.about_title)}\n      {RichText.render(home.content)}\n      <About bio={home.about_bio} socialLinks={home.about_links} />\n    </Section>\n  </>\n)\n\nexport default ({ data }) => {\n  //Required check for no data being returned\n  const doc = data.prismic.allHomepages.edges.slice(0, 1).pop()\n  const projects = data.prismic.allProjects.edges\n  const meta = data.site.siteMetadata\n\n  if (!doc || !projects) return null\n\n  return (\n    <Layout>\n      <RenderBody home={doc.node} projects={projects} meta={meta} />\n    </Layout>\n  )\n}\n\nRenderBody.propTypes = {\n  home: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  {\n    prismic {\n      allHomepages {\n        edges {\n          node {\n            hero_title\n            hero_button_text\n            hero_button_link {\n              ... on PRISMIC__ExternalLink {\n                _linkType\n                url\n              }\n            }\n            content\n            about_title\n            about_bio\n            about_links {\n              about_link\n            }\n          }\n        }\n      }\n      allProjects {\n        edges {\n          node {\n            project_title\n            project_preview_description\n            project_preview_thumbnail\n            project_stacks {\n              project_stack\n            }\n            github_link {\n              ... on PRISMIC__ExternalLink {\n                _linkType\n                url\n              }\n            }\n            demo_link {\n              ... on PRISMIC__ExternalLink {\n                _linkType\n                url\n              }\n            }\n            project_post_date\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}